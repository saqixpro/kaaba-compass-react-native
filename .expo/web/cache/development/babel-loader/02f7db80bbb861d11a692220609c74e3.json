{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DaekTwentri\\\\Desktop\\\\My Masjid Project\\\\EDITED\\\\My_Masjid-master\\\\src\\\\components\\\\Navigator.js\";\n\nimport React from 'react';\nimport { Provider } from 'react-native-paper';\nimport { theme } from \"../core/theme\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { createStackNavigator, HeaderBackButton } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { StartScreen, LoginScreen, RegisterScreen, ForgotPasswordScreen } from \"../screens\";\nimport { MyMasjidScreen, QiblatCompassScreen, MasjidFinderScreen, PrayerTimesScreen, SettingsScreen } from \"../screens\";\nimport { MyAccountScreen, NotificationsScreen, FavoriteMasjidScreen, IslamicCalendarScreen, FeedbackScreen } from \"../screens\";\nimport { MasjidDetailScreen } from \"../screens\";\n{}\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar MainStackNavigator = function MainStackNavigator() {\n  return React.createElement(Provider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"StartScreen\",\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"StartScreen\",\n    component: StartScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ForgotPasswordScreen\",\n    component: ForgotPasswordScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"MyMasjidMainScreen\",\n    component: MyMasjidTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar MyMasjidTab = function MyMasjidTab() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          switch (route.name) {\n            case 'MyMasjid':\n              iconName = focused ? 'mosque' : 'mosque';\n              break;\n\n            case 'QiblatCompass':\n              iconName = focused ? 'compass' : 'compass';\n              break;\n\n            case 'MasjidFinder':\n              iconName = focused ? 'search' : 'search';\n              break;\n\n            case 'PrayerTimes':\n              iconName = focused ? 'clock' : 'clock';\n              break;\n\n            case 'Settings':\n              iconName = focused ? 'wrench' : 'wrench';\n              break;\n          }\n\n          return React.createElement(FontAwesome5, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 24\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      labelPosition: 'below-icon',\n      activeBackgroundColor: '#222222',\n      inactiveBackgroundColor: '#222222',\n      inactiveTintColor: '#FFFFFF',\n      keyboardHidesTabBar: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"MyMasjid\",\n    component: MyMasjidStackNavigator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"QiblatCompass\",\n    component: QiblatCompassStackNavigator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"MasjidFinder\",\n    component: MasjidFinderStackNavigator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"PrayerTimes\",\n    component: PrayerTimesStackNavigator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsStackNavigator,\n    options: {\n      tabBarVisible: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar MyMasjidStackNavigator = function MyMasjidStackNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"MyMasjid\",\n    component: MyMasjidScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar QiblatCompassStackNavigator = function QiblatCompassStackNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"QiblatCompass\",\n    component: QiblatCompassScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar MasjidFinderStackNavigator = function MasjidFinderStackNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"MasjidFinder\",\n    component: MasjidFinderScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"MasjidDetail\",\n    component: MasjidDetailScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar PrayerTimesStackNavigator = function PrayerTimesStackNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"PrayerTimes\",\n    component: PrayerTimesScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar SettingsStackNavigator = function SettingsStackNavigator() {\n  return React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"MyAccount\",\n    component: MyAccountScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Notifications\",\n    component: NotificationsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"FavoriteMasjid\",\n    component: FavoriteMasjidScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Location\",\n    component: MasjidFinderScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"IslamicCalendar\",\n    component: IslamicCalendarScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Feedback\",\n    component: FeedbackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default MyMasjidTab;","map":{"version":3,"sources":["C:/Users/DaekTwentri/Desktop/My Masjid Project/EDITED/My_Masjid-master/src/components/Navigator.js"],"names":["React","Provider","theme","FontAwesome5","createStackNavigator","HeaderBackButton","createBottomTabNavigator","StartScreen","LoginScreen","RegisterScreen","ForgotPasswordScreen","MyMasjidScreen","QiblatCompassScreen","MasjidFinderScreen","PrayerTimesScreen","SettingsScreen","MyAccountScreen","NotificationsScreen","FavoriteMasjidScreen","IslamicCalendarScreen","FeedbackScreen","MasjidDetailScreen","Stack","Tab","MainStackNavigator","headerShown","MyMasjidTab","route","tabBarIcon","focused","color","size","iconName","name","labelPosition","activeBackgroundColor","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","MyMasjidStackNavigator","QiblatCompassStackNavigator","MasjidFinderStackNavigator","PrayerTimesStackNavigator","SettingsStackNavigator","tabBarVisible"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,KAAT;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,oBAAT,EAA+BC,gBAA/B,QAAuD,yBAAvD;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAGA,SACIC,WADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,oBAJJ;AAQA,SACIC,cADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,iBAJJ,EAKIC,cALJ;AAQA,SACIC,eADJ,EAEIC,mBAFJ,EAGIC,oBAHJ,EAIIC,qBAJJ,EAKIC,cALJ;AASA,SACIC,kBADJ;AAIA,CAkBG;AAGH,IAAMC,KAAK,GAAGlB,oBAAoB,EAAlC;AACA,IAAMmB,GAAG,GAAGjB,wBAAwB,EAApC;;AAEA,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7B,SACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEtB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,SAAP;AACI,IAAA,gBAAgB,EAAC,aADrB;AAEI,IAAA,aAAa,EAAE;AACXuB,MAAAA,WAAW,EAAE;AADF,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAElB,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAEC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,gBAAnB;AAAoC,IAAA,SAAS,EAAEC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,sBAAnB;AAA0C,IAAA,SAAS,EAAEC,oBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,oBAAnB;AAAwC,IAAA,SAAS,EAAEgB,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,CADJ;AAgBH,CAjBD;;AAoBA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,SACI,oBAAC,GAAD,CAAK,SAAL;AACI,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC3BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AAC1C,cAAIC,QAAJ;;AAEA,kBAAOL,KAAK,CAACM,IAAb;AACI,iBAAK,UAAL;AACID,cAAAA,QAAQ,GAAGH,OAAO,GAChB,QADgB,GACL,QADb;AAEA;;AAEJ,iBAAK,eAAL;AACIG,cAAAA,QAAQ,GAAGH,OAAO,GAChB,SADgB,GACJ,SADd;AAEA;;AAEJ,iBAAK,cAAL;AACIG,cAAAA,QAAQ,GAAGH,OAAO,GAChB,QADgB,GACL,QADb;AAEA;;AAEJ,iBAAK,aAAL;AACIG,cAAAA,QAAQ,GAAGH,OAAO,GAChB,OADgB,GACN,OADZ;AAEA;;AAEJ,iBAAK,UAAL;AACIG,cAAAA,QAAQ,GAAGH,OAAO,GAChB,QADgB,GACL,QADb;AAEA;AAxBR;;AA0BA,iBAAO,oBAAC,YAAD;AAAc,YAAA,IAAI,EAAEG,QAApB;AAA8B,YAAA,IAAI,EAAED,IAApC;AAA0C,YAAA,KAAK,EAAED,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEC;AAhC0B,OAAhB;AAAA,KADnB;AAmCI,IAAA,aAAa,EAAE;AACXI,MAAAA,aAAa,EAAE,YADJ;AAEXC,MAAAA,qBAAqB,EAAE,SAFZ;AAGXC,MAAAA,uBAAuB,EAAE,SAHd;AAIXC,MAAAA,iBAAiB,EAAE,SAJR;AAKXC,MAAAA,mBAAmB,EAAE;AALV,KAnCnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA2CI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAEC,sBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CJ,EA4CI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,eAAjB;AAAiC,IAAA,SAAS,EAAEC,2BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CJ,EA6CI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,cAAjB;AAAgC,IAAA,SAAS,EAAEC,0BAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CJ,EA8CI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,aAAjB;AAA+B,IAAA,SAAS,EAAEC,yBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CJ,EA+CI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAEC,sBAAvC;AAA+D,IAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CJ,CADJ;AAmDH,CApDD;;AAuDA,IAAML,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACjC,SACI,oBAAC,KAAD,CAAO,SAAP;AACI,IAAA,aAAa,EAAE;AAACd,MAAAA,WAAW,EAAE;AAAd,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEd,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CARD;;AAUA,IAAM6B,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAM;AACtC,SACI,oBAAC,KAAD,CAAO,SAAP;AACI,IAAA,aAAa,EAAE;AAACf,MAAAA,WAAW,EAAE;AAAd,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,eAAnB;AAAmC,IAAA,SAAS,EAAEb,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CARD;;AAUA,IAAM6B,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AACrC,SACI,oBAAC,KAAD,CAAO,SAAP;AACI,IAAA,aAAa,EAAE;AAAChB,MAAAA,WAAW,EAAE;AAAd,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,cAAnB;AAAkC,IAAA,SAAS,EAAEZ,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,cAAnB;AAAkC,IAAA,SAAS,EAAEQ,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CATD;;AAWA,IAAMqB,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AACpC,SACI,oBAAC,KAAD,CAAO,SAAP;AACI,IAAA,aAAa,EAAE;AAACjB,MAAAA,WAAW,EAAE;AAAd,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAEX,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CARD;;AAUA,IAAM6B,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACjC,SACI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAE5B,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,eAAnB;AAAmC,IAAA,SAAS,EAAEC,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,gBAAnB;AAAoC,IAAA,SAAS,EAAEC,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEL,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,iBAAnB;AAAqC,IAAA,SAAS,EAAEM,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAWH,CAZD;;AAgBA,eAAeM,WAAf","sourcesContent":["import React from 'react'\nimport { Provider } from 'react-native-paper'\nimport { theme } from '../core/theme'\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { createStackNavigator, HeaderBackButton } from '@react-navigation/stack'  \nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\n\n//Starting Screen and Login/Registration Screen.\nimport {\n    StartScreen,\n    LoginScreen,\n    RegisterScreen,\n    ForgotPasswordScreen,\n} from '../screens'\n\n//Tab Screens\nimport {\n    MyMasjidScreen,\n    QiblatCompassScreen,\n    MasjidFinderScreen,\n    PrayerTimesScreen,\n    SettingsScreen,\n} from '../screens'\n\nimport {\n    MyAccountScreen,\n    NotificationsScreen,\n    FavoriteMasjidScreen,\n    IslamicCalendarScreen,\n    FeedbackScreen,\n} from '../screens'\n\n\nimport {\n    MasjidDetailScreen,\n} from '../screens'\n\n{/*\n    StartScreen\n    LoginScreen\n    RegisterScreen\n    ForgotPasswordScreen\n    MainScreen\n        MyMasjidScreen\n        QiblatScreen\n        MasjidFinderScreen\n        PrayerTimesScreen\n        SettingsScreen\n            MyAccount\n            Notifications\n            FavoriteMasjid\n            Location --> MasjidFinderScreen\n            PrayerTimes --> PrayerTimesScreen\n            IslamicCalendar\n            FeedBack\n*/}\n\n\nconst Stack = createStackNavigator()\nconst Tab = createBottomTabNavigator()\n\nconst MainStackNavigator = () => {\n    return (\n        <Provider theme={theme}>\n            <Stack.Navigator\n                initialRouteName='StartScreen'\n                screenOptions={{ \n                    headerShown: false,\n                }}\n            >\n                <Stack.Screen name=\"StartScreen\" component={StartScreen} />\n                <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n                <Stack.Screen name=\"RegisterScreen\" component={RegisterScreen} />\n                <Stack.Screen name=\"ForgotPasswordScreen\" component={ForgotPasswordScreen} />\n                <Stack.Screen name=\"MyMasjidMainScreen\" component={MyMasjidTab} />\n            </Stack.Navigator>\n        </Provider>\n    )\n}\n\n\nconst MyMasjidTab = () => {\n    return (\n        <Tab.Navigator \n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n    \n                switch(route.name) {\n                    case 'MyMasjid':\n                        iconName = focused\n                        ? 'mosque' : 'mosque';\n                        break;\n\n                    case 'QiblatCompass':\n                        iconName = focused\n                        ? 'compass' : 'compass';\n                        break;\n\n                    case 'MasjidFinder':\n                        iconName = focused\n                        ? 'search' : 'search';\n                        break;\n\n                    case 'PrayerTimes':\n                        iconName = focused\n                        ? 'clock' : 'clock';\n                        break;\n                    \n                    case 'Settings':\n                        iconName = focused\n                        ? 'wrench' : 'wrench';\n                        break;\n                }\n                return <FontAwesome5 name={iconName} size={size} color={color} />\n\n                },\n            })}\n            tabBarOptions={{\n                labelPosition: 'below-icon',\n                activeBackgroundColor: '#222222',\n                inactiveBackgroundColor: '#222222',\n                inactiveTintColor: '#FFFFFF',\n                keyboardHidesTabBar: true\n            }}\n        >\n            <Tab.Screen name=\"MyMasjid\" component={MyMasjidStackNavigator} />\n            <Tab.Screen name=\"QiblatCompass\" component={QiblatCompassStackNavigator} />\n            <Tab.Screen name=\"MasjidFinder\" component={MasjidFinderStackNavigator} />\n            <Tab.Screen name=\"PrayerTimes\" component={PrayerTimesStackNavigator} />\n            <Tab.Screen name=\"Settings\" component={SettingsStackNavigator} options={{ tabBarVisible: false }} />\n        </Tab.Navigator>\n    )\n}\n\n\nconst MyMasjidStackNavigator = () => {\n    return (\n        <Stack.Navigator\n            screenOptions={{headerShown: false}}\n        >\n            <Stack.Screen name=\"MyMasjid\" component={MyMasjidScreen} />\n        </Stack.Navigator>\n    )\n}\n\nconst QiblatCompassStackNavigator = () => {\n    return (\n        <Stack.Navigator    \n            screenOptions={{headerShown: false}}\n        >\n            <Stack.Screen name=\"QiblatCompass\" component={QiblatCompassScreen} />\n        </Stack.Navigator>\n    )\n}\n\nconst MasjidFinderStackNavigator = () => {\n    return (\n        <Stack.Navigator    \n            screenOptions={{headerShown: false}}\n        >\n            <Stack.Screen name=\"MasjidFinder\" component={MasjidFinderScreen} />\n            <Stack.Screen name=\"MasjidDetail\" component={MasjidDetailScreen} />\n        </Stack.Navigator>\n    )\n}\n\nconst PrayerTimesStackNavigator = () => {\n    return (\n        <Stack.Navigator    \n            screenOptions={{headerShown: false}}\n        >\n            <Stack.Screen name=\"PrayerTimes\" component={PrayerTimesScreen} />\n        </Stack.Navigator>\n    )\n}\n\nconst SettingsStackNavigator = () => {\n    return (\n        <Stack.Navigator>\n            <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n            <Stack.Screen name=\"MyAccount\" component={MyAccountScreen} />\n            <Stack.Screen name=\"Notifications\" component={NotificationsScreen} />\n            <Stack.Screen name=\"FavoriteMasjid\" component={FavoriteMasjidScreen} />\n            <Stack.Screen name=\"Location\" component={MasjidFinderScreen} />\n            <Stack.Screen name=\"IslamicCalendar\" component={IslamicCalendarScreen} />\n            <Stack.Screen name=\"Feedback\" component={FeedbackScreen} />\n        </Stack.Navigator>\n    )\n}\n\n\n\nexport default MyMasjidTab"]},"metadata":{},"sourceType":"module"}
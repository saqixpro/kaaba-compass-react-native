{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DaekTwentri\\\\Desktop\\\\My Masjid Project\\\\EDITED\\\\My_Masjid-master\\\\src\\\\screens\\\\mymasjid-screens\\\\MasjidFinderScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport MainBackground from \"../../components/MainBackground\";\nimport Logo from \"../../components/Logo\";\nimport Paragraph from \"../../components/Paragraph\";\nimport MapView from 'react-native-maps';\nimport { Surface, Searchbar } from 'react-native-paper';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport filter from 'lodash/filter';\n\nvar MasjidFinderScreen = function MasjidFinderScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var masjidData = require(\"../../json/MasjidData.json\");\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fullData = _useState6[0],\n      setFullData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      locationName = _useState8[0],\n      setLocationName = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      locationLat = _useState10[0],\n      setLocationLat = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      locationLong = _useState12[0],\n      setLocationLong = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      locationID = _useState14[0],\n      setLocationID = _useState14[1];\n\n  useEffect(function () {\n    setFullData(masjidData.location);\n  }, []);\n\n  var handleSearch = function handleSearch(text) {\n    if (text == '') {\n      setData('');\n      setQuery(text);\n    } else {\n      var formattedQuery = text.toLowerCase();\n      var filteredData = filter(fullData, function (masjid) {\n        return contains(masjid, formattedQuery);\n      });\n      setData(filteredData);\n      setQuery(text);\n    }\n  };\n\n  var contains = function contains(_ref2, query) {\n    var name = _ref2.name;\n\n    if (name.toLowerCase().includes(query)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return React.createElement(MainBackground, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }), React.createElement(Searchbar, {\n    placeholder: \"Search\",\n    onChangeText: function onChangeText(queryText) {\n      return handleSearch(queryText);\n    },\n    value: query,\n    style: styles.searchBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }), React.createElement(Surface, {\n    style: styles.surface1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    loadingEnabled: true,\n    showsUserLocation: true,\n    initialRegion: {\n      latitude: 4.2105,\n      longitude: 101.9758,\n      latitudeDelta: 2,\n      longitudeDelta: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, React.createElement(MapView.Marker, {\n    coordinate: {\n      latitude: parseFloat(locationLat),\n      longitude: parseFloat(locationLong)\n    },\n    title: locationName,\n    onPress: function onPress() {\n      navigation.navigate('MasjidDetail', {\n        itemID: locationID,\n        itemName: locationName\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }))), React.createElement(Surface, {\n    style: styles.surface2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }, React.createElement(Paragraph, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Your search has yielded \", data.length, \" results\"), React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.masjidID;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setLocationLat(item.lat), setLocationLong(item.long), setLocationName(item.name), setLocationID(item.masjidID);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: styles.masjidList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 22\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"place\",\n        size: 18,\n        color: \"red\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }), React.createElement(Paragraph, {\n        style: {\n          marginLeft: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, item.name)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  searchBar: {\n    width: 350,\n    elevation: 8\n  },\n  surface1: {\n    padding: 8,\n    alignItems: 'center',\n    elevation: 6,\n    marginBottom: 12,\n    borderRadius: 8\n  },\n  map: {\n    width: 350,\n    height: 300\n  },\n  surface2: {\n    maxHeight: 200,\n    height: 200,\n    width: 365,\n    padding: 8,\n    elevation: 6,\n    marginBottom: 12,\n    borderRadius: 8\n  },\n  masjidList: {\n    padding: 2,\n    flexDirection: 'row',\n    padding: 8\n  }\n});\nexport default MasjidFinderScreen;","map":{"version":3,"sources":["C:/Users/DaekTwentri/Desktop/My Masjid Project/EDITED/My_Masjid-master/src/screens/mymasjid-screens/MasjidFinderScreen.js"],"names":["React","useState","useEffect","MainBackground","Logo","Paragraph","MapView","Surface","Searchbar","MaterialIcons","filter","MasjidFinderScreen","navigation","masjidData","require","data","setData","query","setQuery","fullData","setFullData","locationName","setLocationName","locationLat","setLocationLat","locationLong","setLocationLong","locationID","setLocationID","location","handleSearch","text","formattedQuery","toLowerCase","filteredData","masjid","contains","name","includes","queryText","styles","searchBar","surface1","map","latitude","longitude","latitudeDelta","longitudeDelta","parseFloat","navigate","itemID","itemName","surface2","fontWeight","length","item","masjidID","lat","long","masjidList","marginLeft","StyleSheet","create","width","elevation","padding","alignItems","marginBottom","borderRadius","height","maxHeight","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport MainBackground from '../../components/MainBackground'\nimport Logo from '../../components/Logo'\nimport Paragraph from '../../components/Paragraph'\nimport MapView  from 'react-native-maps';\nimport { Surface, Searchbar } from 'react-native-paper'\nimport { FlatList, View, TouchableOpacity, StyleSheet } from 'react-native'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport filter from 'lodash/filter'\n\nconst MasjidFinderScreen = ({ navigation }) => {\n   const masjidData = require('../../json/MasjidData.json');\n\n   const [data, setData] = useState([]);\n   const [query, setQuery] = useState('');\n   const [fullData, setFullData] = useState([]);\n\n   const [locationName, setLocationName] = useState('');\n   const [locationLat, setLocationLat] = useState(0);\n   const [locationLong, setLocationLong] = useState(0);\n   const [locationID, setLocationID] = useState('');\n\n   useEffect(() => {\n      setFullData(masjidData.location);\n   }, []);\n\n   // Searching part\n   const handleSearch = text => {\n      if (text == '') {\n         setData('');\n         setQuery(text);\n      } else {\n            const formattedQuery = text.toLowerCase();\n            const filteredData = filter(fullData, masjid => {\n               return contains(masjid, formattedQuery);\n         });\n         setData(filteredData);\n         setQuery(text);\n      }\n  };\n\n  const contains = ({ name }, query) => {\n\n      if (name.toLowerCase().includes(query)) {\n        return true;\n      }\n      return false;\n  };\n  //\n\n   return (\n      <MainBackground>\n\n         <Logo />\n         \n         <Searchbar \n            placeholder = \"Search\"\n            onChangeText = {queryText => handleSearch(queryText)}\n            value = {query}\n            style={styles.searchBar}\n         />\n         \n         <Surface style={styles.surface1}>\n            <MapView \n            style={styles.map}\n            loadingEnabled={true}\n            showsUserLocation={true}\n            initialRegion={{\n               latitude: 4.2105,\n               longitude: 101.9758,\n               latitudeDelta: 2,\n               longitudeDelta: 2\n            }}\n            >\n               <MapView.Marker \n                  coordinate={{ \n                     latitude: parseFloat(locationLat), \n                     longitude: parseFloat(locationLong) \n                  }}\n                  title={locationName}\n                  onPress={() =>{ navigation.navigate('MasjidDetail', { itemID: locationID, itemName: locationName }) }}\n               />\n            </MapView>\n         </Surface>\n\n         <Surface style={styles.surface2}>\n\n            <Paragraph style={{ fontWeight: 'bold' }}>\n               Your search has yielded {data.length} results\n            </Paragraph>\n\n            <FlatList\n               data={data}\n               keyExtractor={(item) => item.masjidID}\n               renderItem={({ item }) => (\n                  <TouchableOpacity onPress={() => { setLocationLat(item.lat), setLocationLong(item.long), setLocationName(item.name), setLocationID(item.masjidID) }}>\n                     <View style={styles.masjidList}>\n                        <MaterialIcons name='place' size={18} color='red' />\n                        <Paragraph style={{ marginLeft: 10 }}>{item.name}</Paragraph>\n                     </View>\n                  </TouchableOpacity>\n               )}\n            />\n\n         </Surface>\n\n      </MainBackground>\n   )\n};\n\nconst styles = StyleSheet.create ({\n   searchBar: {\n      width: 350,\n      elevation: 8\n   },\n\n   surface1: {\n      padding: 8,\n      alignItems: 'center',\n      elevation: 6,\n      marginBottom: 12,\n      borderRadius: 8\n   },\n\n   map: {\n     width: 350,\n     height: 300,\n   },\n\n   surface2: {\n      maxHeight: 200,\n      height: 200,\n      width: 365,\n      padding: 8,\n      elevation: 6,\n      marginBottom: 12,\n      borderRadius: 8\n   },\n\n   masjidList: {\n      padding: 2, \n      flexDirection: 'row', \n      padding: 8\n   },\n});\n\nexport default MasjidFinderScreen;\n"]},"metadata":{},"sourceType":"module"}
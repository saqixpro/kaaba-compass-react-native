{"ast":null,"code":"import NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nvar CompassHeading = NativeModules.CompassHeading;\nvar listener;\nvar _start = CompassHeading.start;\n\nCompassHeading.start = function (update_rate, callback) {\n  if (listener) {\n    CompassHeading.stop();\n  }\n\n  var compassEventEmitter = new NativeEventEmitter(CompassHeading);\n  listener = compassEventEmitter.addListener('HeadingUpdated', function (degree) {\n    callback(degree);\n  });\n\n  _start(update_rate === null ? 0 : update_rate);\n};\n\nvar _stop = CompassHeading.stop;\n\nCompassHeading.stop = function () {\n  listener && listener.remove();\n  listener = null;\n\n  _stop();\n};\n\nexport default CompassHeading;","map":{"version":3,"sources":["C:/Users/DaekTwentri/Desktop/My Masjid Project/EDITED/20210401 My_Masjid-master/node_modules/react-native-compass-heading/index.js"],"names":["CompassHeading","NativeModules","listener","_start","start","update_rate","callback","stop","compassEventEmitter","NativeEventEmitter","addListener","degree","_stop","remove"],"mappings":";;IAEQA,c,GAAmBC,a,CAAnBD,c;AAER,IAAIE,QAAJ;AAGA,IAAIC,MAAM,GAAGH,cAAc,CAACI,KAA5B;;AACAJ,cAAc,CAACI,KAAf,GAAuB,UAACC,WAAD,EAAcC,QAAd,EAA2B;AAChD,MAAIJ,QAAJ,EAAc;AACZF,IAAAA,cAAc,CAACO,IAAf;AACD;;AAED,MAAMC,mBAAmB,GAAG,IAAIC,kBAAJ,CAAuBT,cAAvB,CAA5B;AACAE,EAAAA,QAAQ,GAAGM,mBAAmB,CAACE,WAApB,CAAgC,gBAAhC,EAAkD,UAACC,MAAD,EAAY;AACvEL,IAAAA,QAAQ,CAACK,MAAD,CAAR;AACD,GAFU,CAAX;;AAIAR,EAAAA,MAAM,CAACE,WAAW,KAAK,IAAhB,GAAuB,CAAvB,GAA2BA,WAA5B,CAAN;AACD,CAXD;;AAaA,IAAIO,KAAK,GAAGZ,cAAc,CAACO,IAA3B;;AACAP,cAAc,CAACO,IAAf,GAAsB,YAAM;AAC1BL,EAAAA,QAAQ,IAAIA,QAAQ,CAACW,MAAT,EAAZ;AACAX,EAAAA,QAAQ,GAAG,IAAX;;AACAU,EAAAA,KAAK;AACN,CAJD;;AAMA,eAAeZ,cAAf","sourcesContent":["import { NativeModules, NativeEventEmitter } from 'react-native';\n\nconst { CompassHeading } = NativeModules;\n\nlet listener;\n\n//Monkey patching\nlet _start = CompassHeading.start;\nCompassHeading.start = (update_rate, callback) => {\n  if (listener) {\n    CompassHeading.stop();\n  }\n\n  const compassEventEmitter = new NativeEventEmitter(CompassHeading);\n  listener = compassEventEmitter.addListener('HeadingUpdated', (degree) => {\n    callback(degree);\n  });\n\n  _start(update_rate === null ? 0 : update_rate);\n}\n\nlet _stop = CompassHeading.stop;\nCompassHeading.stop = () => {\n  listener && listener.remove();\n  listener = null;\n  _stop();\n}\n\nexport default CompassHeading;\n"]},"metadata":{},"sourceType":"module"}
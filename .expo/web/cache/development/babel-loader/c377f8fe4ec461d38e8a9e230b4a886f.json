{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DaekTwentri\\\\Desktop\\\\My Masjid Project\\\\EDITED\\\\20210401 My_Masjid-master\\\\src\\\\screens\\\\mymasjid-screens\\\\QiblatCompassScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Background from \"../../components/Background\";\nimport Logo from \"../../components/Logo\";\nimport Paragraph from \"../../components/Paragraph\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Grid, Col, Row } from 'react-native-easy-grid';\nimport { Magnetometer } from 'expo-sensors';\n\nvar QiblatCompassScreen = function QiblatCompassScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      subscription = _useState2[0],\n      setSubscription = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      magnetometer = _useState4[0],\n      setMagnetometer = _useState4[1];\n\n  useEffect(function () {\n    _toggle();\n\n    return function () {\n      _unsubscribe();\n    };\n  }, []);\n\n  var _toggle = function _toggle() {\n    if (subscription) {\n      _unsubscribe();\n    } else {\n      _subscribe();\n    }\n  };\n\n  var _subscribe = function _subscribe() {\n    setSubscription(Magnetometer.addListener(function (data) {\n      setMagnetometer(_angle(data));\n    }));\n  };\n\n  var _unsubscribe = function _unsubscribe() {\n    subscription && subscription.remove();\n    subscription = (_readOnlyError(\"subscription\"), null);\n  };\n\n  var _angle = function _angle(magnetometer) {\n    if (magnetometer) {\n      var x = magnetometer.x,\n          y = magnetometer.y,\n          z = magnetometer.z;\n\n      if (Math.atan2(y, x) >= 0) {\n        angle = Math.atan2(y, x) * (180 / Math.PI);\n      } else {\n        angle = (Math.atan2(y, x) + 2 * Math.PI) * (180 / Math.PI);\n      }\n    }\n\n    return Math.round(angle);\n  };\n\n  var _direction = function _direction(degree) {\n    if (degree >= 22.5 && degree < 67.5) {\n      return 'NE';\n    } else if (degree >= 67.5 && degree < 112.5) {\n      return 'E';\n    } else if (degree >= 112.5 && degree < 157.5) {\n      return 'SE';\n    } else if (degree >= 157.5 && degree < 202.5) {\n      return 'S';\n    } else if (degree >= 202.5 && degree < 247.5) {\n      return 'SW';\n    } else if (degree >= 247.5 && degree < 292.5) {\n      return 'W';\n    } else if (degree >= 292.5 && degree < 337.5) {\n      return 'NW';\n    } else {\n      return 'N';\n    }\n  };\n\n  var _degree = function _degree(magnetometer) {\n    return magnetometer - 90 >= 0 ? magnetometer - 90 : magnetometer + 271;\n  };\n\n  return React.createElement(Grid, {\n    style: {\n      backgroundColor: 'black'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, React.createElement(Row, {\n    style: {\n      alignItems: 'center'\n    },\n    size: .9,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(Col, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#fff',\n      fontSize: height / 26,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, _direction(_degree(magnetometer))))), React.createElement(Row, {\n    style: {\n      alignItems: 'center'\n    },\n    size: .1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(Col, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      width: width,\n      alignItems: 'center',\n      top: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/compass_pointer.png\"),\n    style: {\n      height: height / 26,\n      resizeMode: 'contain'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })))), React.createElement(Row, {\n    style: {\n      alignItems: 'center'\n    },\n    size: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#fff',\n      fontSize: height / 27,\n      width: width,\n      position: 'absolute',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, _degree(magnetometer), \"\\xB0\"), React.createElement(Col, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/compass_bg.png\"),\n    style: {\n      height: width - 80,\n      justifyContent: 'center',\n      alignItems: 'center',\n      resizeMode: 'contain',\n      transform: [{\n        rotate: 360 - magnetometer + 'deg'\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }))), React.createElement(Row, {\n    style: {\n      alignItems: 'center'\n    },\n    size: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(Col, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Copyright @RahulHaque\"))));\n  var styles = StyleSheet.create({\n    image: {\n      width: '90%',\n      flex: 1,\n      alignSelf: 'center'\n    }\n  });\n};\n\nexport default QiblatCompassScreen;","map":{"version":3,"sources":["C:/Users/DaekTwentri/Desktop/My Masjid Project/EDITED/20210401 My_Masjid-master/src/screens/mymasjid-screens/QiblatCompassScreen.js"],"names":["React","useState","useEffect","Background","Logo","Paragraph","Grid","Col","Row","Magnetometer","QiblatCompassScreen","navigation","subscription","setSubscription","magnetometer","setMagnetometer","_toggle","_unsubscribe","_subscribe","addListener","data","_angle","remove","x","y","z","Math","atan2","angle","PI","round","_direction","degree","_degree","backgroundColor","alignItems","color","fontSize","height","fontWeight","position","width","top","require","resizeMode","textAlign","justifyContent","transform","rotate","styles","StyleSheet","create","image","flex","alignSelf"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Background from '../../components/Background'\nimport Logo from '../../components/Logo'\nimport Paragraph from '../../components/Paragraph'\nimport {Image, View, Text, Dimensions} from 'react-native';\nimport { Grid, Col, Row } from 'react-native-easy-grid';\nimport { Magnetometer } from 'expo-sensors';\n\nconst QiblatCompassScreen = ({ navigation }) => {\n  const [subscription, setSubscription] = useState(null);\n  const [magnetometer, setMagnetometer] = useState(0);\n\n  useEffect(() => {\n    _toggle();\n    return () => {\n      _unsubscribe();\n    };\n  }, []);\n\n  const _toggle = () => {\n    if (subscription) {\n      _unsubscribe();\n    } else {\n      _subscribe();\n    }\n  };\n\n  const _subscribe = () => {\n    setSubscription(\n      Magnetometer.addListener((data) => {\n        setMagnetometer(_angle(data));\n      })\n    );\n  };\n\n  const _unsubscribe = () => {\n    subscription && subscription.remove();\n    subscription = null;\n  };\n\n  const _angle = (magnetometer) => {\n    if (magnetometer) {\n      let { x, y, z } = magnetometer;\n\n      if (Math.atan2(y, x) >= 0) {\n        angle = Math.atan2(y, x) * (180 / Math.PI);\n      }\n      else {\n        angle = (Math.atan2(y, x) + 2 * Math.PI) * (180 / Math.PI);\n      }\n    }\n\n    return Math.round(angle);\n  };\n\n  const _direction = (degree) => {\n    if (degree >= 22.5 && degree < 67.5) {\n      return 'NE';\n    }\n    else if (degree >= 67.5 && degree < 112.5) {\n      return 'E';\n    }\n    else if (degree >= 112.5 && degree < 157.5) {\n      return 'SE';\n    }\n    else if (degree >= 157.5 && degree < 202.5) {\n      return 'S';\n    }\n    else if (degree >= 202.5 && degree < 247.5) {\n      return 'SW';\n    }\n    else if (degree >= 247.5 && degree < 292.5) {\n      return 'W';\n    }\n    else if (degree >= 292.5 && degree < 337.5) {\n      return 'NW';\n    }\n    else {\n      return 'N';\n    }\n  };\n\n  // Match the device top with pointer 0° degree. (By default 0° starts from the right of the device.)\n  const _degree = (magnetometer) => {\n    return magnetometer - 90 >= 0 ? magnetometer - 90 : magnetometer + 271;\n  };\n\n  return (\n\n    <Grid style={{ backgroundColor: 'black' }}>\n      <Row style={{ alignItems: 'center' }} size={.9}>\n        <Col style={{ alignItems: 'center' }}>\n          <Text\n            style={{\n              color: '#fff',\n              fontSize: height / 26,\n              fontWeight: 'bold'\n            }}>\n            {_direction(_degree(magnetometer))}\n          </Text>\n        </Col>\n      </Row>\n\n      <Row style={{ alignItems: 'center' }} size={.1}>\n        <Col style={{ alignItems: 'center' }}>\n          <View style={{ position: 'absolute', width: width, alignItems: 'center', top: 0 }}>\n            <Image source={require('../../assets/compass_pointer.png')} style={{\n              height: height / 26,\n              resizeMode: 'contain'\n            }} />\n          </View>\n        </Col>\n      </Row>\n\n      <Row style={{ alignItems: 'center' }} size={2}>\n        <Text style={{\n          color: '#fff',\n          fontSize: height / 27,\n          width: width,\n          position: 'absolute',\n          textAlign: 'center'\n        }}>\n          {_degree(magnetometer)}°\n          </Text>\n\n        <Col style={{ alignItems: 'center' }}>\n\n          <Image source={require(\"../../assets/compass_bg.png\")} style={{\n            height: width - 80,\n            justifyContent: 'center',\n            alignItems: 'center',\n            resizeMode: 'contain',\n            transform: [{ rotate: 360 - magnetometer + 'deg' }]\n          }} />\n\n        </Col>\n      </Row>\n\n      <Row style={{ alignItems: 'center' }} size={1}>\n        <Col style={{ alignItems: 'center' }}>\n          <Text style={{ color: '#fff' }}>Copyright @RahulHaque</Text>\n        </Col>\n      </Row>\n\n    </Grid>\n\n  );\n \n const styles = StyleSheet.create({\n   image: {\n     width: '90%',\n     flex: 1,\n     alignSelf: 'center',\n   },\n });\n}\n\n//  return (\n//    <Background>\n//    <Logo />\n//    <Paragraph>d\n//       Qiblat Compass\n//    </Paragraph>\n// </Background>\n// )\n   // const getQiblaHeading(lat, long) => {\n   //    let myPoint = new.google.maps.LatLng(lat, long)\n   //    let qiblaPoint = new google.maps.LatLng(21.4225, 39.8262);\n\n   //    let heading = google.maps.geometry.spherical.computeHeading(myPoint, qiblaPoint)  \n   //    console.log(heading)\n   //    return heading\n   // }\n\n   //    let arrow = document.querySelector(\"#compass\")\n   //    arrow.setAttribute(\"style\", `transform: rotate(${getQiblaHeading(35.6762, 130.6503) - 90}deg);`);\n\n   \n   \n\n\nexport default QiblatCompassScreen\n"]},"metadata":{},"sourceType":"module"}